{"version":3,"sources":["components/Button.tsx","components/Divider.tsx","components/TabHeader.tsx","data.ts","components/Checkbox.tsx","components/LabelRating.tsx","components/TableRow.tsx","components/Table.tsx","components/Tabs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","type","title","onClick","className","icon","iconPosition","size","colorScheme","backgroundColor","classNames","join","renderClassNames","style","aria-hidden","Divider","color","TabHeader","onAddSybmol","onEditPortfolio","onExcelExport","onPrint","onViewHeadlines","DATA_TITLES_MAP","dataTitles","Object","keys","data","1","id","symbol","price","change","changePercentage","alerts","volume","averageVolume","prevClose","open","high","low","dayRange","start","diff","end","quantRating","authorRating","sellSideRating","2","Checkbox","name","onCheckboxChange","checked","label","htmlFor","data-testid","onChange","LabelRating","value","rating","Number","isNaN","renderColor","TableRow","renderChangeNumbers","withPercentage","Math","sign","left","renderDayRange","Table","titles","titlesCopy","useState","sortBy","setSortBy","sortDirection","setSortDirection","sortedData","sort","prev","next","prevItem","nextItem","map","index","column","prevDirection","key","item","Tabs","children","tabs","Children","toArray","defaultTab","props","selectedTab","setSelectedTab","role","tab","aria-current","find","Tab","App","fakeData","setData","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3295f4e5.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\n\ninterface IButton {\n  type?: 'button' | 'submit';\n  title: string | boolean;\n  className?: string;\n  icon?:\n    | 'excel'\n    | 'print'\n    | 'plus'\n    | 'checkmark'\n    | 'arrow-bottom'\n    | 'document'\n    | 'pencil';\n  size?: 'small';\n  iconPosition?: 'right';\n  onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  colorScheme?: 'dark' | 'light';\n  backgroundColor?: string;\n}\n\nconst Button: FunctionComponent<IButton> = ({\n  type = 'button',\n  title,\n  onClick,\n  className,\n  icon,\n  iconPosition,\n  size = 'small',\n  colorScheme = 'light',\n  backgroundColor,\n}) => {\n  const renderClassNames = () => {\n    let classNames = ['is-btn'];\n\n    if (!title) {\n      classNames = [...classNames, 'only-icon'];\n    }\n\n    if (iconPosition === 'right') {\n      classNames = [...classNames, 'right-aligned-icon'];\n    }\n\n    if (size) {\n      classNames = [...classNames, `is-btn-${size}`];\n    }\n\n    if (colorScheme) {\n      classNames = [...classNames, `is-btn-${colorScheme}`];\n    }\n\n    return [...classNames, className].join(' ');\n  };\n\n  return (\n    <button\n      type={type}\n      className={renderClassNames()}\n      onClick={onClick}\n      style={{ backgroundColor }}>\n      {icon ? <i className={`icon-${icon}`} aria-hidden=\"true\" /> : null}\n      {title ? <span>{title}</span> : null}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as React from 'react';\n\ninterface IDivider {\n  color?: 'dark';\n}\n\nconst Divider: React.FunctionComponent<IDivider> = ({ color }) => {\n  return (\n    <span className={`is-divider ${color ? `is-divider-${color}` : ''}`} />\n  );\n};\n\nexport default Divider;\n","import React from 'react';\nimport Button from './Button';\nimport Divider from './Divider';\n\ninterface ITabHeader {\n  onAddSybmol: () => void;\n  onEditPortfolio: () => void;\n  onExcelExport: () => void;\n  onPrint: () => void;\n  onViewHeadlines: () => void;\n}\n\nconst TabHeader: React.FunctionComponent<ITabHeader> = ({\n  onAddSybmol,\n  onEditPortfolio,\n  onExcelExport,\n  onPrint,\n  onViewHeadlines,\n}) => {\n  return (\n    <div className=\"tab-header\">\n      <h2 className=\"is-heading\">\n        Portfolio 1 - Dividends & Income\n        <i className=\"icon-arrow-bottom\" aria-hidden=\"true\" />\n      </h2>\n\n      <div className=\"buttons-wrapper\">\n        <Button\n          icon=\"plus\"\n          title=\"Add Symbol\"\n          colorScheme=\"dark\"\n          onClick={onAddSybmol}\n        />\n        <Button\n          icon=\"pencil\"\n          title=\"Edit Portfolio\"\n          onClick={onEditPortfolio}\n        />\n\n        <Divider />\n        <Button title={false} icon=\"excel\" onClick={onExcelExport} />\n        <Button title={false} icon=\"print\" onClick={onPrint} />\n        <Divider />\n\n        <Button\n          icon=\"document\"\n          title=\"View Headlines\"\n          onClick={onViewHeadlines}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TabHeader;\n","import { ITableRow } from './models';\n\nexport const DATA_TITLES_MAP: { [name: string]: string } = {\n  'Symbol': 'symbol',\n  'Price': 'price',\n  'Change': 'change',\n  'Change %': 'changePercentage',\n  'Alerts': 'alerts',\n  'Volume': 'volume',\n  'Avg. Vol': 'averageVolume',\n  'Prev Close': 'prevClose',\n  'Open': 'open',\n  'ןHigh': 'high',\n  'Low': 'low',\n  '52 Wk Range': 'range',\n  'Quant': 'quant',\n  'SA Authors': 'saAuthours',\n  'Sell Side ': 'sellSide',\n};\n\nexport const dataTitles = Object.keys(DATA_TITLES_MAP);\n\nexport const data: { [id: string]: ITableRow } = {\n  1: {\n    id: 1,\n    symbol: 'AFK',\n    price: '19.51',\n    change: '-0.14',\n    changePercentage: '0.71',\n    alerts: false,\n    volume: '1911',\n    averageVolume: '11.41K',\n    prevClose: '19.65',\n    open: '19.53',\n    high: '19.23',\n    low: '18.5',\n    dayRange: { start: 19.65, diff: 0.25, end: 19.69 },\n    quantRating: '2.2',\n    authorRating: '3.2',\n    sellSideRating: 'NR',\n  },\n  2: {\n    id: 2,\n    symbol: 'BRK.A',\n    price: '11.51',\n    change: '-0.14',\n    changePercentage: '0.71',\n    alerts: true,\n    volume: '1111',\n    averageVolume: '10.41K',\n    prevClose: '12.65',\n    open: '12.53',\n    high: '12.23',\n    low: '12.5',\n    dayRange: { start: 19.65, diff: 0.76, end: 19.69 },\n    quantRating: '1.2',\n    authorRating: '4.1',\n    sellSideRating: '4.5',\n  },\n};\n","import * as React from 'react';\n\ninterface ICheckbox {\n  name: string;\n  onCheckboxChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  checked: boolean;\n  label?: string;\n}\n\nconst Checkbox: React.FunctionComponent<ICheckbox> = ({\n  name,\n  onCheckboxChange,\n  checked,\n  label,\n}) => {\n  return (\n    <div className=\"is-checkbox\">\n      <label htmlFor={name}>\n        <input\n          data-testid=\"checkbox-test-id\"\n          name={name}\n          type=\"checkbox\"\n          onChange={onCheckboxChange}\n          checked={checked}\n        />\n\n        <span className=\"check-icon\">\n          <i className=\"icon-checkmark\" />\n        </span>\n        {label ? <span>{label}</span> : null}\n      </label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import * as React from 'react';\n\ninterface ILabelRating {\n  value: string;\n}\n\nconst LabelRating: React.FunctionComponent<ILabelRating> = ({ value }) => {\n  const renderColor = () => {\n    const rating = Number(value);\n\n    if (value === 'NR' || Number.isNaN(rating)) return 'label-text-grey';\n\n    if (rating < 2) {\n      return 'label-bg-dark-red';\n    }\n\n    if (rating < 3) {\n      return 'label-bg-red';\n    }\n\n    if (rating < 4) {\n      return 'label-bg-orange';\n    }\n\n    if (rating < 4.5) {\n      return 'label-bg-green';\n    }\n\n    if (rating >= 4.5) {\n      return 'label-bg-dark-green';\n    }\n  };\n  return <div className={`label-rating ${renderColor()}`}>{value}</div>;\n};\n\nexport default LabelRating;\n","import * as React from 'react';\nimport { IDayRange, ITableRow } from './../models';\nimport Checkbox from './Checkbox';\nimport LabelRating from './LabelRating';\n\ninterface TableRowProps {\n  data: ITableRow;\n  onChange: (item: ITableRow) => void;\n}\n\nconst TableRow: React.FunctionComponent<TableRowProps> = ({\n  data,\n  onChange,\n}) => {\n  const {\n    symbol,\n    price,\n    change,\n    changePercentage,\n    alerts,\n    volume,\n    averageVolume,\n    prevClose,\n    dayRange,\n    open,\n    high,\n    low,\n    quantRating,\n    authorRating,\n    sellSideRating,\n  } = data;\n\n  const renderChangeNumbers = (value: string, withPercentage?: boolean) => {\n    if (Math.sign(Number(value)) > 0) {\n      return (\n        <span className=\"positive-number\">\n          {withPercentage ? `${value}%` : value}\n        </span>\n      );\n    }\n\n    if (Math.sign(Number(value)) < 0) {\n      return (\n        <span className=\"negative-number\">\n          {withPercentage ? `${value}%` : value}\n        </span>\n      );\n    }\n\n    return value;\n  };\n\n  const renderDayRange = ({ start, diff, end }: IDayRange) => {\n    return (\n      <div className=\"day-range\">\n        <span>{start}</span>\n        <div className=\"range\">\n          <span className=\"indicator\" style={{ left: `${diff * 100}%` }} />\n        </div>\n        <span>{end}</span>\n      </div>\n    );\n  };\n\n  const onCheckboxChange = () => {\n    onChange({ ...data, alerts: !alerts });\n  };\n\n  return (\n    <tr className=\"table-row\">\n      <td>\n        <div className=\"symbol\">{symbol}</div>\n      </td>\n      <td>{price}</td>\n      <td>{renderChangeNumbers(change)}</td>\n      <td>{renderChangeNumbers(changePercentage, true)}</td>\n      <td>\n        <Checkbox\n          name=\"alert\"\n          checked={alerts}\n          onCheckboxChange={onCheckboxChange}\n        />\n      </td>\n      <td>{volume}</td>\n      <td>{averageVolume}</td>\n      <td>{prevClose}</td>\n      <td>{open}</td>\n      <td>{high}</td>\n      <td>{low}</td>\n      <td>{renderDayRange(dayRange)}</td>\n      <td className=\"quant-cell\">\n        <LabelRating value={quantRating} />\n      </td>\n      <td className=\"saAuthours-cell\">\n        <LabelRating value={authorRating} />\n      </td>\n      <td className=\"sellSide-cell\">\n        <LabelRating value={sellSideRating} />\n      </td>\n    </tr>\n  );\n};\n\nexport default TableRow;\n","import React, { useState } from 'react';\nimport { ITableRow } from '../models';\nimport TableRow from './TableRow';\n\ninterface ITable<T> {\n  titles: { [name: string]: string };\n  titlesCopy: string[];\n  data: { [id: string]: T };\n  onChange: (data: { [id: string]: T }) => void;\n}\n\nconst Table = <T extends ITableRow>({\n  titles,\n  titlesCopy,\n  data,\n  onChange,\n}: ITable<T>) => {\n  const [sortBy, setSortBy] = useState<keyof T>('id');\n\n  const [sortDirection, setSortDirection] = useState(1);\n\n  const handleSort = (column: keyof T) => () => {\n    setSortDirection(\n      sortBy === column ? (prevDirection: number) => prevDirection * -1 : 1\n    );\n    setSortBy(column);\n  };\n\n  const sortedData = Object.keys(data).sort((prev: string, next: string) => {\n    const prevItem = data[prev];\n    const nextItem = data[next];\n\n    if (prevItem[sortBy] === nextItem[sortBy]) {\n      return 0;\n    }\n    return prevItem[sortBy] > nextItem[sortBy]\n      ? sortDirection\n      : -1 * sortDirection;\n  });\n\n  return (\n    <div className=\"is-content-wrapper\">\n      <table className=\"is-table\">\n        <thead>\n          <tr>\n            {titlesCopy.map((title: string, index: number) => (\n              <th key={index} className={`${titles[title]}-cell`}>\n                <button onClick={handleSort(titles[title] as keyof T)}>\n                  {title}\n                  {titles[title] === sortBy\n                    ? sortDirection > 0\n                      ? '↑'\n                      : '↓'\n                    : null}\n                </button>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {sortedData.map((key: string) => (\n            <TableRow\n              key={key}\n              data={data[key]}\n              onChange={(item: ITableRow) =>\n                onChange({ ...data, [item.id]: item })\n              }\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { useState, Children } from 'react';\n\nconst Tab: React.FC<{ id: string; name: string }> = ({ id, children }) => {\n  return <div id={id}>{children}</div>;\n};\n\nconst Tabs: React.FC & { Tab: typeof Tab } = ({ children }) => {\n  const tabs: any[] = Children.toArray(children) || [];\n  const defaultTab = tabs[0]?.props.id;\n  const [selectedTab, setSelectedTab] = useState(defaultTab);\n\n  return (\n    <div className=\"tabs-wrapper\">\n      <nav role=\"navigation\" className=\"tabs-navigation\">\n        {tabs.map((tab: any) => (\n          <button\n            key={tab.props.id}\n            aria-current={tab.props.id === selectedTab}\n            className={`tab-link ${\n              tab.props.id === selectedTab ? 'is-active' : ''\n            }`}\n            onClick={() => setSelectedTab(tab.props.id)}>\n            {tab.props.name}\n          </button>\n        ))}\n      </nav>\n      {tabs.find((item: any) => item.props.id === selectedTab)}\n    </div>\n  );\n};\n\nTabs.Tab = Tab;\n\nexport default Tabs;\n","import React, { useState, FunctionComponent } from 'react';\nimport TabHeader from './components/TabHeader';\nimport { data as fakeData, dataTitles, DATA_TITLES_MAP } from './data';\nimport Table from './components/Table';\nimport Tabs from './components/Tabs';\n\nconst App: FunctionComponent = () => {\n  const [data, setData] = useState(fakeData);\n\n  const handleAddSybmol = () => console.log('handleAddSybmol');\n  const handleEditPortfolio = () => console.log('handleEditPortfolio');\n  const handleViewHeadlines = () => console.log('handleViewHeadlines');\n  const handleExcelExport = () => console.log('handleExcelExport');\n  const handlePrint = () => console.log('handlePrint');\n\n  return (\n    <div className=\"is-container\">\n      <TabHeader\n        onAddSybmol={handleAddSybmol}\n        onEditPortfolio={handleEditPortfolio}\n        onViewHeadlines={handleViewHeadlines}\n        onExcelExport={handleExcelExport}\n        onPrint={handlePrint}\n      />\n\n      <Tabs>\n        <Tabs.Tab name=\"Table\" id=\"table\">\n          <Table\n            titlesCopy={dataTitles}\n            titles={DATA_TITLES_MAP}\n            data={data}\n            onChange={setData}\n          />\n        </Tabs.Tab>\n        <Tabs.Tab name=\"Description\" id=\"description\">\n          <div className=\"is-content-wrapper\">\n            <p>\n              Lorem ipsum dolor, sit amet consectetur adipisicing elit.\n              Similique, voluptatum quis! Recusandae rerum, deleniti in\n              voluptates facere suscipit hic impedit culpa inventore distinctio,\n              consequatur, doloremque assumenda enim quidem voluptatum pariatur.\n            </p>\n          </div>\n        </Tabs.Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}